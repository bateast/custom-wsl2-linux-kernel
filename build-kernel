#!/bin/bash

TAG=linux-msft-wsl-6.6.87.2

clear

##
## set the available cpu thread and core count for parallel processing (speeds up the build process)
##

if [ -f '/proc/cpuinfo' ]; then
    cpu_threads="$(grep -c ^processor '/proc/cpuinfo')"
else
    cpu_threads="$(nproc --all)"
fi
cpu_cores="$(grep ^cpu\\scores '/proc/cpuinfo' | uniq | awk '{print $4}')"

##
## define functions
##

exit_fn()
{
    echo
    echo 'The new kernel will be located in the root build directory'
    echo
    echo 'The filename will be called: vmlinux'
    echo
    echo 'Place the kernel into a folder inside your "%USERPROFILE%"'
    echo
    echo 'I placed mine into the folder I created called: "%USERPROFILE%\WSL2\vmlinux"'
    echo
    echo 'Create a file called "%USERPROFILE%\.wslconfig" and look up online how to link'
    echo 'the new kernel you copied so that your WSL2 linux Distro loads it.'
    echo
    echo 'Make sure to star this repository to show your support!'
    echo
    echo 'https://github.com/slyfox1186/Windows-WSL2-Kernel-build-script/'
    echo
    exit 0
}

fail_fn()
{
    echo
    echo "$1"
    echo
    exit 1
}

download()
{
    target_dir="$2"

    if [ ! -d "$target_dir" ]; then
        echo "Downloading $1 as $dl_file"
        if ! git clone --depth 1 --revision "$3" "$1" "$target_dir"; then
                echo "The script failed to download \"$1\" two times and will exit the build"
                fail_fn
        fi
        echo 'Download Completed'
        echo
    else
        echo "$target_dir is already downloaded"
    fi


    cd "$target_dir" || fail_fn "Unable to change the working directory to $target_dir"

    echo 'patching d3dkmthk.h'
    sed -i 's@\/\* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note \*\/@#include <linux/types.h>@' ./include/uapi/misc/d3dkmthk.h
}


clear

echo "WSL2-Custom-Kernel build script v$script_ver"
echo '======================================'

echo
echo "The script will utilize ( $cpu_threads cpu cores ) for parallel processing to accelerate the build speed."

##
## required apt packages
##

build_pkgs_fn()
{
    echo
    echo 'Installing required apt packages'
    echo '=================================='

    pkgs=(build-essential curl flex bison dwarves gcc g++ gcc-12 g++-12 jq libssl-dev libelf-dev bc)

    for pkg in ${pkgs[@]}
    do
        if ! installed "$pkg"; then
            missing_pkgs+=" $pkg"
        fi
    done

    if [ -n "$missing_pkgs" ]; then
        for pkg in "$missing_pkgs"
        do
            if sudo apt -y install $pkg; then
                echo
                echo 'The required apt packages were installed.'
                echo
            else
                fail_fn 'The required apt packages failed to install'
            fi
        done
        echo 'The required apt packages are already installed.'
    fi
}

# install required apt packages
build_pkgs_fn

download "https://github.com/microsoft/WSL2-Linux-Kernel" "linux-msft-wsl" "${TAG}"
echo 'yes' | make KCONFIG_CONFIG=../config-wsl -j "$cpu_cores"

exit_fn
